{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "saName": {
      "type": "string",
      "defaultValue": "satpeuazfe",
      "metadata": {
        "description": "Name of the STORAGE ACCOUNT used for Diagnostics."
      }

    },
    "saType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account for Diagnostics"
      }
    },
    "sharedServicesHUB": {
      "type": "string",
      "defaultValue": "VNET-TP-EU-SS",
      "metadata": {
        "description": "Name of the SHARED SERVICES [HUB] Virtual network."
      }

    },
    "testSPOKE": {
      "type": "string",
      "defaultValue": "VNET-TP-EU-TST",
      "metadata": {
        "description": "Name of the TEST SPOKE Virtual network."
      }

    },
    "resourceLocation": {
      "type": "string",
      "defaultValue": "West Europe",
      "metadata": {
        "description": "Location where Resources will be deployed."
      }

    },
    "azfirewallName": {
      "type": "string",
      "defaultValue": "AZFW-TP-EU-SS",
      "metadata": {
        "description": "Name of the SHARED SERVICES Azure Firewall."
      }

    },
    "azfwSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "172.16.254.0/26",
      "metadata": {
        "description": "AzureFirewallSubnet prefix"
      }
    },
    "noPublicIPAddresses": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of public IP addresses."
      }

    },
    "publicIPNamePrefix": {
      "type": "string",
      "defaultValue": "PIP-TP-EU-AZFW",
      "metadata": {
        "description": "Public IP address name prefix - will be auto suffixed with a number (e.g. publicIP1)."
      }

    },
    "availabilityZones": {
      "type": "array",
      "defaultValue": [ "1", "2", "3" ],
      "metadata": {
        "description": "Zone numbers e.g. 1,2,3."
      }

    },
    "azRouteTables": {
      "defaultValue": "RT-TP-EU-AZFW",
      "type": "string"
    },
    "azUDRINT": {
      "defaultValue": "UDR-TP-EU-INT",
      "type": "string"
    },
    "azUDRSS": {
      "defaultValue": "UDR-TP-EU-SS",
      "type": "string"
    },
    "azUDRSPOKE": {
      "defaultValue": "UDR-TP-EU-SPOKE",
      "type": "string"
    },
    "nsgMGMTSS": {
      "type": "string",
      "defaultValue": "NSG-MGMT-EU-SS",
      "metadata": {
        "description": "Name of the SHARED SERVICES subnet NSG."
      }

    },
    "nsgSPWEB": {
      "type": "string",
      "defaultValue": "NSG-WEB-EU-TST",
      "metadata": {
        "description": "Name of the TEST SPOKE web subnet NSG."
      }

    },
    "nsgSPAPP": {
      "type": "string",
      "defaultValue": "NSG-APP-EU-TST",
      "metadata": {
        "description": "Name of the TEST SPOKE APP subnet NSG."
      }

    },
    "nsgSPDB": {
      "type": "string",
      "defaultValue": "NSG-DB-EU-TST",
      "metadata": {
        "description": "Name of the TEST SPOKE DB subnet NSG."
      }

    },
    "nsgSPID": {
      "type": "string",
      "defaultValue": "NSG-ID-EU-TST",
      "metadata": {
        "description": "Name of the TEST SPOKE ID subnet NSG."
      }

    },
    "applicationGatewayName": {
      "type": "string",
      "defaultValue": "AGW-TP-EU-TS",
      "metadata": {
        "description": "Name of Spoke Application Gateway"
      }
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "WAF_Medium",
        "WAF_Large"
      ],
      "defaultValue": "WAF_Medium",
      "metadata": {
        "description": "The size of the Application Gateway"
      }
    },
    "applicationGatewayTier": {
      "type": "string",
      "allowedValues": [
        "WAF",
        "WAF_v2"
      ],
      "defaultValue": "WAF",
      "metadata": {
        "description": "The Tier of the Application Gateway"
      }
    },
    "applicationGatewayInstanceCount": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "application gateway instance count"
      }
    },
    "frontendIPAddresses": {
      "type": "string",
      "defaultValue": "10.102.1.4",
      "metadata": {
        "description": "Static Front End IP Address of AppGW."
      }

    },
    "frontendPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "application gateway front end port"
      }
    },
    "backendPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "application gateway back end port"
      }
    },
    "wafEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Switch to enable the Application Gateway Web Application Firewall"
      }
    },
    "wafMode": {
      "type": "string",
      "allowedValues": [
        "Detection",
        "Prevention"
      ],
      "defaultValue": "Detection",
      "metadata": {
        "description": "Operational Mode of the Application Gateway Web Application Firewall"
      }
    },
    "wafRuleSetType": {
      "type": "string",
      "allowedValues": [
        "OWASP"
      ],
      "defaultValue": "OWASP",
      "metadata": {
        "description": "Application Gateway WAF Rule Engine"
      }
    },
    "wafRuleSetVersion": {
      "type": "string",
      "allowedValues": [
        "2.2.9",
        "3.0"
      ],
      "defaultValue": "3.0",
      "metadata": {
        "description": "Version of the Application Gateway Web Application Firewall Rules."
      }

    },
    "backendIPAddresses": {
      "type": "array",
      "defaultValue": [
        {
          "IpAddress": "10.102.2.4"
        },
        {
          "IpAddress": "10.102.2.5"
        }
      ],
      "metadata": {
        "description": "back end pool ip addresses"
      }
    },
    "cookieBasedAffinity": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Disabled",
      "metadata": {
        "description": "cookie based affinity"
      }
    }
  },
  "variables": {
    "VNETSSPrefix": "172.16.0.0/16",
    "GWSubnetName": "GatewaySubnet",
    "GWSubnetPrefix": "172.16.255.224/27",
    "MGMTSubnetName": "MGMTSubnet",
    "MGMTSubnetPrefix": "172.16.1.0/24",
    "SSSubnetName": "SharedServicesSubnet",
    "SSSubnetPrefix": "172.16.2.0/23",
    "VNETSPPrefix": "10.102.0.0/16",
    "APPGWSPSubnetName": "APPGWTST",
    "APPGWSPSubnetPrefix": "10.102.1.0/24",
    "WEBSPSubnetName": "WEBTST",
    "WEBSPSubnetPrefix": "10.102.2.0/23",
    "APPSPSubnetName": "APPTST",
    "APPSPSubnetPrefix": "10.102.4.0/23",
    "DBSPSubnetName": "DBTST",
    "DBSPSubnetPrefix": "10.102.6.0/23",
    "IDSPSubnetName": "IDTST",
    "IDSPSubnetPrefix": "10.102.8.0/23",
    "azureFirewallSubnetName": "AzureFirewallSubnet",
    "azureFirewallSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('sharedServicesHUB'), variables('azureFirewallSubnetName'))]",
    "azureFirewallPublicIpId": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPNamePrefix'))]",
    "azureFirewallSubnetJSON": "[json(format('{{\"id\": \"{0}\"}}', variables('azureFirewallSubnetId')))]",
    "copy": [
      {
        "name": "azureFirewallIpConfigurations",
        "count": "[parameters('noPublicIPAddresses')]",
        "input": {
          "name": "[concat('IpConf', copyIndex('azureFirewallIpConfigurations'))]",
          "properties": {
            "subnet": "[if(equals(copyIndex('azureFirewallIpConfigurations'), 0), variables('azureFirewallSubnetJSON'), json('null'))]",
            "publicIPAddress": {
              "id": "[concat(variables('azureFirewallPublicIpId'), add(copyIndex('azureFirewallIpConfigurations'), 1))]"
            }
          }
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[parameters('nsgMGMTSS')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "MGMT2SPPROD",
            "properties": {
              "description": "Allow RDS Traffic to PRODUCTION Network",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "10.102.0.0/16",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInbound",
            "etag": "",
            "properties": {
              "description": "Allow Inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "AllowAzureLoadBalancer",
            "etag": "",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "DenyAllInbound",
            "etag": "",
            "properties": {
              "description": "Deny all Inbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow Outbound traffic from all VMS to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "etag": "",
            "properties": {
              "description": "Deny all Outbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('nsgSPWEB')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "APPGW2WEBPRD",
            "properties": {
              "description": "Allow L7 Traffic from APPGW TO WEBPRD",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "10.102.1.0/24",
              "destinationAddressPrefix": "10.102.2.0/23",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInbound",
            "etag": "",
            "properties": {
              "description": "Allow Inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "AllowAzureLoadBalancer",
            "etag": "",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "DenyAllInbound",
            "etag": "",
            "properties": {
              "description": "Deny all Inbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow Outbound traffic from all VMS to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "etag": "",
            "properties": {
              "description": "Deny all Outbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('nsgSPAPP')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "WEBPRD2APPPRD",
            "properties": {
              "description": "Allow WEBPRD TO APPPRD",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "10.102.2.0/23",
              "destinationAddressPrefix": "10.102.4.0/23",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInbound",
            "etag": "",
            "properties": {
              "description": "Allow Inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "AllowAzureLoadBalancer",
            "etag": "",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "DenyAllInbound",
            "etag": "",
            "properties": {
              "description": "Deny all Inbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow Outbound traffic from all VMS to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "etag": "",
            "properties": {
              "description": "Deny all Outbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('nsgSPDB')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "APPPRD2DBPRD",
            "properties": {
              "description": "Allow APPPRD TO DBPRD",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "10.102.4.0/23",
              "destinationAddressPrefix": "10.102.6.0/23",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInbound",
            "etag": "",
            "properties": {
              "description": "Allow Inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "AllowAzureLoadBalancer",
            "etag": "",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "DenyAllInbound",
            "etag": "",
            "properties": {
              "description": "Deny all Inbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow Outbound traffic from all VMS to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "etag": "",
            "properties": {
              "description": "Deny all Outbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('nsgSPID')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "ALL2IDPRD",
            "properties": {
              "description": "Allow all Production Traffic to IDPRD",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "389",
              "sourceAddressPrefix": "10.102.0.0/16",
              "destinationAddressPrefix": "10.102.8.0/23",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInbound",
            "etag": "",
            "properties": {
              "description": "Allow Inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "AllowAzureLoadBalancer",
            "etag": "",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }

          },
          {
            "name": "DenyAllInbound",
            "etag": "",
            "properties": {
              "description": "Deny all Inbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow Outbound traffic from all VMS to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "etag": "",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "etag": "",
            "properties": {
              "description": "Deny all Outbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('sharedServicesHUB')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-08-01",
      "location": "[parameters('resourceLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgMGMTSS'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgSPWEB'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgSPAPP'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgSPDB'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgSPID'))]"
      ],
      "tags": {
        "displayName": "[parameters('sharedServicesHUB')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VNETSSPrefix')]"
          ]
        },
        "enableDdosProtection": false,
        "subnets": [
          {
            "name": "[variables('GWSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[variables('GWSubnetPrefix')]",
              "serviceEndpoints": [],
              "delegations": []
            }
          },
          {
            "name": "[variables('azureFirewallSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[parameters('azfwSubnetAddressPrefix')]",
              "serviceEndpoints": [],
              "delegations": []
            }
          },
          {
            "name": "[variables('MGMTSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[variables('MGMTSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgMGMTSS'))]"
              },
              "serviceEndpoints": [],
              "delegations": []
            }
          },
          {
            "name": "[variables('SSSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[variables('SSSubnetPrefix')]",
              "serviceEndpoints": [],
              "delegations": []
            }
          }
        ]
      },
      "resources": [
        {
          "apiVersion": "2019-08-01",
          "type": "virtualNetworkPeerings",
          "name": "[concat(parameters('sharedServicesHUB'), '-to-', parameters('testSPOKE'))]",
          "location": "[parameters('resourceLocation')]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('sharedServicesHUB'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('testSPOKE'))]"
          ],
          "comments": "This is the peering from vNet 1 to vNet 2",
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('testSPOKE'))]"
            }
          }
        }
      ]
    },
    {
      "name": "[concat(parameters('publicIPNamePrefix'), add(copyIndex(), 1))]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-08-01",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      },
      "copy": {
        "name": "publicIpCopy",
        "count": "[parameters('noPublicIPAddresses')]"
      }
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/azureFirewalls",
      "name": "[parameters('azfirewallName')]",
      "location": "[parameters('resourceLocation')]",
      "zones": "[if(equals(length(parameters('availabilityZones')), 0), json('null'), parameters('availabilityZones'))]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('sharedServicesHUB'))]",
        "publicIpCopy"
      ],
      "properties": {
        "ipConfigurations": "[variables('azureFirewallIpConfigurations')]",
        "applicationRuleCollections": [
          {
            "name": "appRc1",
            "properties": {
              "priority": 100,
              "action": { "type": "Allow" },
              "rules": [
                {
                  "name": "appRule1",
                  "protocols": [
                    {
                      "port": "80",
                      "protocolType": "http"
                    }
                  ],
                  "targetFqdns": [ "www.microsoft.com" ],
                  "sourceAddresses": [ "10.102.0.0/16" ]
                }
              ]
            }
          }
        ],
        "networkRuleCollections": [
          {
            "name": "netRc1",
            "properties": {
              "priority": 100,
              "action": { "type": "Allow" },
              "rules": [
                {
                  "name": "netRule1",
                  "protocols": [ "TCP" ],
                  "sourceAddresses": [ "10.102.0.0/16" ],
                  "destinationAddresses": [ "*" ],
                  "destinationPorts": [ "8000-8999" ]
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('testSPOKE')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-08-01",
      "location": "[parameters('resourceLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgSPWEB'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgSPAPP'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgSPDB'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters ('nsgSPID'))]",
        "[resourceId('Microsoft.Network/routeTables', parameters ('azRouteTables'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VNETSPPrefix')]"
          ]
        },
        "enableDdosProtection": false,
        "subnets": [
          {
            "name": "[variables('APPGWSPSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[variables('APPGWSPSubnetPrefix')]",
              "serviceEndpoints": [],
              "delegations": []
            }
          },
          {
            "name": "[variables('WEBSPSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[variables('WEBSPSubnetPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('azRouteTables'))]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgSPWEB'))]"
              },
              "serviceEndpoints": [],
              "delegations": []
            }
          },
          {
            "name": "[variables('APPSPSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[variables('APPSPSubnetPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('azRouteTables'))]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgSPAPP'))]"
              },
              "serviceEndpoints": [],
              "delegations": []
            }
          },
          {
            "name": "[variables('DBSPSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[variables('DBSPSubnetPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('azRouteTables'))]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgSPDB'))]"
              },
              "serviceEndpoints": [],
              "delegations": []
            }
          },
          {
            "name": "[variables('IDSPSubnetName')]",
            "etag": "",
            "properties": {
              "addressPrefix": "[variables('IDSPSubnetPrefix')]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('azRouteTables'))]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgSPID'))]"
              },
              "serviceEndpoints": [],
              "delegations": []
            }
          }
        ]
      },
      "resources": [
        {
          "apiVersion": "2019-08-01",
          "type": "virtualNetworkPeerings",
          "name": "[concat(parameters('testSPOKE'), '-to-', parameters('sharedServicesHUB'))]",
          "location": "[parameters('resourceLocation')]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('sharedServicesHUB'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('testSPOKE'))]"
          ],
          "comments": "This is the peering from vNet 1 to vNet 2",
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('sharedServicesHUB'))]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2019-07-01",
      "name": "[parameters('azRouteTables')]",
      "location": "[parameters('resourceLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('sharedServicesHUB'))]"
      ],
      "properties": {
        "disableBgpRoutePropagation": true,
        "routes": [
          {
            "name": "[parameters('azUDRINT')]",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "172.16.254.4"
            }
          },
          {
            "name": "[parameters('azUDRSPOKE')]",
            "properties": {
              "addressPrefix": "10.102.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "172.16.254.4"
            }
          },
          {
            "name": "[parameters('azUDRSS')]",
            "properties": {
              "addressPrefix": "172.16.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "172.16.254.4"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-04-01",
      "name": "[parameters('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[parameters('resourceLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters ('testSPOKE'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('applicationGatewaySize')]",
          "tier": "[parameters('applicationGatewayTier')]",
          "capacity": "[parameters('applicationGatewayInstanceCount')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('testSPOKE'), variables('APPGWSPSubnetName'))]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "privateIPAddress": "[parameters('frontendIPAddresses')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('testSPOKE'), variables('APPGWSPSubnetName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": "[parameters('frontendPort')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": "[parameters('backendIPAddresses')]"
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": "[parameters('backendPort')]",
              "Protocol": "Http",
              "CookieBasedAffinity": "[parameters('cookieBasedAffinity')]"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIpConfiguration": {
                "Id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/appGatewayFrontendPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "RRR-TP-EU",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              }
            }
          }
        ],
        "probes": [],
        "rewriteRuleSets": [],
        "redirectConfigurations": [],
        "webApplicationFirewallConfiguration": {
          "enabled": "[parameters('wafEnabled')]",
          "firewallMode": "[parameters('wafMode')]",
          "ruleSetType": "[parameters('wafRuleSetType')]",
          "ruleSetVersion": "[parameters('wafRuleSetVersion')]",
          "disabledRuleGroups": [],
          "requestBodyCheck": true,
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[parameters('saName')]",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "[parameters('saType')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "accessTier": "Hot"
      }
    }
  ],
  "outputs": {}
}